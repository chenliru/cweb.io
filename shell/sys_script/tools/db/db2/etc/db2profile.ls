#
#############################################################################
#
# Licensed Materials - Property of IBM
#
# 5724-B62
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5724-D54
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5765-F35
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5765-F43
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5765-F41
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5765-F30
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5765-F34
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5765-F31
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# 5765-F42
# (C) COPYRIGHT International Business Machines Corp. 1993, 2002
#
# All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
#############################################################################
#
# NAME:     db2profile
#
# FUNCTION: This script sets up a default database environment for
#           Bourne shell or Korn shell users.
#
# USAGE:    . db2profile
#           This script can either be invoked directly as above or
#           it can be added to the user's .profile file so that the
#           database environment is established during login.
#
#           #### DO NOT EDIT THIS FILE ####
#
#############################################################################

# Default DB2 product directory
DB2DIR="/usr/opt/db2_08_01"

# Remember the current DB2INSTANCE environment variable
CUR_INSTNAME=${DB2INSTANCE:=""}

#-----------------------------------------------------------------------
# DB2INSTANCE [Default null, values: Any valid instance name]
# Specifies the instance that is active by default.
#-----------------------------------------------------------------------
DB2INSTANCE=db2inst1
export DB2INSTANCE
INSTHOME=/home/db2inst1

# Function to add or remove certain path to or from the specified
# environment variable.
AddRemoveString()
{
    if [ $# -ne 3 ]; then
       return 0
    fi
    var=$1        #The enviornment variable to be processed
    addrm_str=$2  #The new path to be used
    action=$3     #Action: a -> add, r -> remove
    if [ "X${action?}" != "Xa" -a "X${action?}" != "Xr" ]; then
        return 0  # return without doing anything
    fi
    awkval='$1 != "'${addrm_str?}'"{print $0}'
    newval=`eval /usr/bin/echo \\${$var:-""} | /usr/bin/awk '{for (i=1; i<= NF; ++i) \
          if( $i != VAR ) print $i":"}' FS=":" VAR=${addrm_str?}`
    newval=`/usr/bin/echo ${newval?} | /usr/bin/sed 's/\: /\:/g'`
    if [ "X${action?}" = "Xa" ]; then
        newval=${newval?}"${addrm_str?}"
    else
        newval=`/usr/bin/echo ${newval?} | /usr/bin/sed 's/:$//'`
    fi
    eval $var=\"${newval?}\"
    unset var addrm_str awkval newval
}

#----------------------------------------------------------------------------
# If DB2 instance environment is being switched from one instances to another,
# the entries for old DB2 instance in the original instance enviornment
# are cleaned up.
#----------------------------------------------------------------------------
if [ -n "${CUR_INSTNAME?}" ]; then 
     CUR_INSTHOME=`${INSTHOME?}/sqllib/bin/db2usrinf -d ${CUR_INSTNAME?}`
     path_list="bin adm misc" 
     class_list="java/db2java.zip java/db2jcc.jar java/sqlj.zip function \
       java/db2jcc_license_cisuz.jar java/db2jcc_license_cu.jar \
               java/runtime.zip"

     for tmp_entry in ${path_list?}; do
        AddRemoveString PATH ${CUR_INSTHOME?}/sqllib/${tmp_entry?} r
     done
     for tmp_entry in ${class_list?}; do
        AddRemoveString CLASSPATH ${CUR_INSTHOME?}/sqllib/${tmp_entry?} r
     done
     AddRemoveString LD_LIBRARY_PATH ${CUR_INSTHOME?}/sqllib/lib r
     AddRemoveString LIBPATH ${CUR_INSTHOME?}/sqllib/lib r
     AddRemoveString LD_LIBRARYN32_PATH ${CUR_INSTHOME?}/sqllib/lib32 r
     AddRemoveString SHLIB_PATH ${CUR_INSTHOME?}/sqllib/lib r
fi

AddRemoveString PATH ${INSTHOME?}/sqllib/bin a
AddRemoveString PATH ${INSTHOME?}/sqllib/adm a
AddRemoveString PATH ${INSTHOME?}/sqllib/misc a
export PATH

#-----------------------------------------------------------------------
# UDB Extender initialization
#-----------------------------------------------------------------------
if [ -f ${INSTHOME}/dmb/dmbprofile ]; then
    . ${INSTHOME}/dmb/dmbprofile
fi

#-----------------------------------------------------------------------
# The following variables are used for JDBC support
#-----------------------------------------------------------------------
CLASSPATH=${CLASSPATH:-""}

if [ -f ${INSTHOME?}/sqllib/java/db2java.zip ]; then
    AddRemoveString CLASSPATH ${INSTHOME?}/sqllib/java/db2java.zip a
fi
if [ -f ${INSTHOME?}/sqllib/java/db2jcc.jar ]; then
    AddRemoveString CLASSPATH ${INSTHOME?}/sqllib/java/db2jcc.jar a
fi
if [ -f ${INSTHOME?}/sqllib/java/sqlj.zip ]; then
    AddRemoveString CLASSPATH ${INSTHOME?}/sqllib/java/sqlj.zip a
fi
if [ -d ${INSTHOME?}/sqllib/function ]; then
    AddRemoveString CLASSPATH ${INSTHOME?}/sqllib/function a
fi

if [ -f ${INSTHOME?}/sqllib/java/db2jcc_license_cisuz.jar ]; then
    AddRemoveString CLASSPATH ${INSTHOME?}/sqllib/java/db2jcc_license_cisuz.jar a
fi

if [ -f ${INSTHOME?}/sqllib/java/db2jcc_license_cu.jar ]; then
    AddRemoveString CLASSPATH ${INSTHOME?}/sqllib/java/db2jcc_license_cu.jar a
fi

AddRemoveString CLASSPATH . a
export CLASSPATH

#-----------------------------------------------------------------------
# The following variables are used for Data Warehouse support
#-----------------------------------------------------------------------
if [ -d ${INSTHOME?}/sqllib/templates ]; then
    VWS_TEMPLATES=${INSTHOME?}/sqllib/templates
    export VWS_TEMPLATES
fi
if [ -d ${INSTHOME?}/sqllib/logging ]; then
    VWS_LOGGING=${INSTHOME?}/sqllib/logging
    export VWS_LOGGING
fi
VWSPATH=${INSTHOME?}/sqllib
export VWSPATH


LD_LIBRARY_PATH=${LD_LIBRARY_PATH:-""}
AddRemoveString LD_LIBRARY_PATH ${INSTHOME}/sqllib/lib a
export LD_LIBRARY_PATH

# If LIBPATH isn't set, AIX assumes "/usr/lib:lib".  But if LIBPATH
# is set, AIX makes no such assumption.  Thus, to duplicate AIX's
# behaviour, if LIBPATH is not set, add the assumptions, but if LIBPATH
# is already set, we must make the same assumption that /usr/lib:lib is
# already in the LIBPATH somewhere.

LIBPATH=${LIBPATH:-"/usr/lib:/lib"}
AddRemoveString LIBPATH ${INSTHOME}/sqllib/lib a
export LIBPATH
#-----------------------------------------------------------------------
# The following variables are used for Datalinks support
#-----------------------------------------------------------------------

if [ -z "$DSMI_DIR" ]; then
    DSMI_DIR=`${INSTHOME?}/sqllib/bin/db2fupdt -f ${INSTHOME?}/sqllib/ctrl/.instuse -p DSMI_DIR`
    if [ $? -ne 1 ]; then
        export DSMI_DIR
    fi
fi

if [ -z "$DSMI_CONFIG" ]; then
    DSMI_CONFIG=`${INSTHOME?}/sqllib/bin/db2fupdt -f ${INSTHOME?}/sqllib/ctrl/.instuse -p DSMI_CONFIG`
    if [ $? -ne 1 ]; then
        export DSMI_CONFIG
    fi
fi

if [ -z "$DSMI_LOG" ]; then
    DSMI_LOG=`${INSTHOME?}/sqllib/bin/db2fupdt -f ${INSTHOME?}/sqllib/ctrl/.instuse -p DSMI_LOG`
    if [ $? -ne 1 ]; then
        export DSMI_LOG
    fi
fi


#--------------------------------------------------------------------------
# Any user changes to the environment goes into userprofile.  Modifications
# to db2profile may be overwritten in fixpaks.
#--------------------------------------------------------------------------
if [ -f ${INSTHOME?}/sqllib/userprofile ]; then
    . ${INSTHOME?}/sqllib/userprofile
fi
